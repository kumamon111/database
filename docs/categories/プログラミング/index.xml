<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>プログラミング on Business base</title>
    <link>https://busi-base.tk/categories/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</link>
    <description>Recent content in プログラミング on Business base</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 26 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://busi-base.tk/categories/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>今更ながら加重平均と単純平均の違いって？</title>
      <link>https://busi-base.tk/programming/statistics1/</link>
      <pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://busi-base.tk/programming/statistics1/</guid>
      <description>今更ながら加重平均と単純平均の違いって？  加重平均 (weighted average)  単純平均の算式に株式数・数量（単位換算の量）等でウエイトすることにより求められる平均価格
an average resulting from the multiplication of each component by a factor reflecting its importance
 単純平均 (simple average)  対象となる銘柄を、それぞれ１株ずつ保有した場合の平均価格
うーん&amp;hellip;
これだけじゃよくわからないと思うので、以下の例をご覧ください。
Now moving on to the example
ソースコード import numpy as np import pandas as pd import pandas_datareader.data as web import matplotlib.pyplot as plt tickers = &amp;quot;BCHARTS/BITSTAMPUSD&amp;quot; cur_data = web.DataReader(tickers, &#39;quandl&#39;, &#39;2018-02-23&#39;, &#39;2018-02-26&#39;)[[&amp;quot;Close&amp;quot;, &amp;quot;VolumeCurrency&amp;quot;]]  
quandle APIを使用して、4日間のビットコイン価格を取得します。
Using quandle API, Let&amp;rsquo;s get the bitcoin data for 4 days I randomly select.</description>
    </item>
    
    <item>
      <title>Bitcoinの収益率を対数差分で出して見た。(Python)</title>
      <link>https://busi-base.tk/programming/return/</link>
      <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://busi-base.tk/programming/return/</guid>
      <description>コード例 import quandl import matplotlib.pyplot as plt import pandas as pd import numpy as np # get the data from quandl mydata_01 = quandl.get(&#39;BCHARTS/BITSTAMPUSD&#39;, start_date=&amp;quot;2012-01-01&amp;quot;, end_date=&amp;quot;2017-02-23&amp;quot;) #print(mydata_01) # csv mydata_01.to_csv(&#39;データ保存先&#39;) # log returns #今回はこちらを使用 # log(クローズの価格 ÷ 1日前のクローズの価格) mydata_01[&#39;log_return&#39;] = np.log(mydata_01[&#39;Close&#39;] / mydata_01[&#39;Close&#39;].shift(1)) # simple returns # (クローズの価格 ÷ 1日前のクローズの価格) - 1 # mydata_01[&#39;simple_return&#39;] = (mydata_01[&#39;Close&#39;] / mydata_01[&#39;Close&#39;].shift(1)) - 1 mydata_01[&#39;simple_return&#39;] mydata_01[&#39;log_return&#39;].plot() # show matrix plt.show()  解説 対数(log)を使用したのは、分散を一定に近くするため。</description>
    </item>
    
    <item>
      <title>株価の基礎的なリターンリスクを算出(Python)</title>
      <link>https://busi-base.tk/programming/var/</link>
      <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://busi-base.tk/programming/var/</guid>
      <description>コード例 import numpy as np import pandas as pd import pandas_datareader.data as web # define stock that you take ticker = [&amp;quot;FB&amp;quot;] # web.DataReader(取得したい銘柄, どこから取得するか, いつから始めるか) sec_data = web.DataReader(ticker, data_source=&amp;quot;morningstar&amp;quot;, start=&amp;quot;2016-1-1&amp;quot;)[&amp;quot;Close&amp;quot;] #下から５つ表示 print(sec_data.tail()) #収益率 sec_return = np.log(sec_data/sec_data.shift(1)) #標準偏差 sec_return_std = sec_return.std() #分散 sec_return_var = sec_return.std()*250**0.5 print(sec_return_std, sec_return_var) # 0.014795688350667528 0.23394037369064727  解説 標準偏差(不偏標準偏差 == np.std(a, ddof=1)) std() 分散 std() * 1年間のマーケット日数 ** 0.5 &amp;lsquo;**&amp;lsquo;は二乗</description>
    </item>
    
  </channel>
</rss>